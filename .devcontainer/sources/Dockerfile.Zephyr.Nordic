FROM ghcr.io/linuxcontainers/debian-slim:latest AS downloader
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils \
    && apt-get install -y \
    curl \
    bzip2 \
    unzip

RUN mkdir -p /tmp/dc-downloads /tmp/dc-extracted/gcc /tmp/dc-extracted/cmake

ARG CMAKE_SCRIPT=https://cmake.org/files/v3.23/cmake-3.23.0-linux-x86_64.sh
RUN curl -o /tmp/dc-downloads/cmake.sh $CMAKE_SCRIPT \
    && chmod +x /tmp/dc-downloads/cmake.sh \
    && bash /tmp/dc-downloads/cmake.sh --skip-license --prefix=/tmp/dc-extracted/cmake

FROM ghcr.io/linuxcontainers/debian-slim:latest AS devcontainer

# Avoid warnings by switching to noninteractive
ENV DEBIAN_FRONTEND=noninteractive

# You can set up non-root user
# ARG USERNAME=vscode
# ARG USER_UID=1000
# ARG USER_GID=$USER_UID

# Configure apt and install packages
RUN apt-get update \
    && apt-get -y install --no-install-recommends apt-utils dialog icu-devtools 2>&1 \
    && apt-get install -y \
    git \
    git-lfs \
    curl \
    ninja-build \
    srecord \
    python3 \
    python3-pip \
    gperf

# Create needed directories
RUN mkdir -p /usr/local/bin/gcc

# Clone mbedtls and fatfs
#RUN git clone --branch mbedtls-2.28.1 https://github.com/ARMmbed/mbedtls.git --depth 1 ./sources/mbedtls \
#    && git clone --branch R0.14b https://github.com/abbrev/fatfs.git --depth 1 ./sources/fatfs

# Clone Nordic SDK
# RUN git clone --branch v2.0.0 https://github.com/nrfconnect/sdk-nrf --depth 1 --recursive ./sources/sdk-nrf

# Clone Zephyr RTOS toolchain
#RUN git clone --branch v0.15.1 https://github.com/zephyrproject-rtos/sdk-ng/ --depth 1 --recursive ./sources/sdk-ng

# set gcc location
ENV ARM_GCC_PATH=/usr/local/bin/gcc
ENV PATH=$ARM_GCC_PATH/bin:${PATH}

# Copy from our other container
COPY --from=downloader /tmp/dc-extracted/gcc $ARM_GCC_PATH
COPY --from=downloader /tmp/dc-extracted/cmake /usr

# Creating static link python for pyhton3
RUN ln -fs /usr/bin/python3 /usr/bin/python \
    && pip3 install pyserial
    && pip3 install west

# Install requirements
# ENV SDK_PATH=/sources/sdk-nrf
RUN cd ./sources/
RUN python -m west init -m https://github.com/nrfconnect/sdk-nrf --mr v2.0.0 && west update --narrow -o=--depth=1 && west zephyr-export
RUN python -m pip install -r zephyr/scripts/requirements.txt
RUN python -m pip install -r nrf/scripts/requirements.txt
RUN python -m pip install -r bootloader/mcuboot/scripts/requirements.txt
#RUN cmakeArgs: '-P $RTOS_PATH/cmake/zephyr_sdk_export.cmake'
#\zephyr-${{ parameters.zephyrSdkVersion }}\arm-zephyr-eabi\bin
#ENV PATH=$PATH:$IDF_PATH/components/esptool_py/esptool:$IDF_PATH/components/espcoredump:$IDF_PATH/components/partition_table/:$IDF_PATH/tools/:$IDF_PATH/components/app_update:/root/.espressif/tools/xtensa-esp32-elf/esp-2021r2-patch3-8.4.0/xtensa-esp32-elf/bin:/root/.espressif/tools/xtensa-esp32s2-elf/esp-2021r2-patch3-8.4.0/xtensa-esp32s2-elf/bin:/root/.espressif/tools/riscv32-esp-elf/esp-2021r2-patch3-8.4.0/riscv32-esp-elf/bin

# Clean up downloaded files
RUN apt-get autoremove -y \
    && apt-get clean -y \
    && rm -rf /var/lib/apt/lists/*

# Switch back to dialog for any ad-hoc use of apt-get
ENV DEBIAN_FRONTEND=dialog
