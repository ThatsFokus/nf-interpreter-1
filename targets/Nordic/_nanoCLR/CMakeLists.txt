#
# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.
#

# add header file with common target definitions
configure_file(${CMAKE_CURRENT_SOURCE_DIR}/target_platform.h.in
               ${CMAKE_CURRENT_BINARY_DIR}/target_platform.h @ONLY)

# # append target RTOS nanoCLR source files 
list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetHAL_Time.cpp)
list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetHAL_Power.c)

list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetPAL_Time.cpp)
list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/targetPAL_events.cpp)

list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/nanoCRT.cpp)

list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/memory.cpp)
list(APPEND TARGET_NORDIC_NANOCLR_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/CLR_Startup_Thread.c)

# make var global
set(TARGET_NORDIC_NANOCLR_SOURCES ${TARGET_NORDIC_NANOCLR_SOURCES} CACHE INTERNAL "make global")

# append includes
list(APPEND TARGET_NORDIC_NANOCLR_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR})
list(APPEND TARGET_NORDIC_NANOCLR_INCLUDE_DIRS ${CMAKE_CURRENT_BINARY_DIR})
list(APPEND TARGET_NORDIC_NANOCLR_INCLUDE_DIRS ${CMAKE_SOURCE_DIR}/src)

# make var global
set(TARGET_NORDIC_NANOCLR_INCLUDE_DIRS ${TARGET_NORDIC_NANOCLR_INCLUDE_DIRS} CACHE INTERNAL "make global")
